{
  "c": "#include <stdio.h>\n\nint findMax(int arr[], int size) {\n    int max = arr[0]; // Assume the first element is the maximum\n    for (int i = 1; i < size; i++) {\n        if (arr[i] > max) {\n            max = arr[i]; // Update max if a larger value is found\n        }\n    }\n    return max;\n}\n\nint main() {\n    int numbers[] = {3, 1, 4, 1, 5, 9};\n    int size = sizeof(numbers) / sizeof(numbers[0]);\n    printf(\"Max value: %d\\n\", findMax(numbers, size)); // Output: 9\n    return 0;\n}",
  "cpp": "#include <iostream>\nusing namespace std;\n\nint findMax(int arr[], int size) {\n    int max = arr[0]; // Assume the first element is the maximum\n    for (int i = 1; i < size; i++) {\n        if (arr[i] > max) {\n            max = arr[i]; // Update max if a larger value is found\n        }\n    }\n    return max;\n}\n\nint main() {\n    int numbers[] = {3, 1, 4, 1, 5, 9};\n    int size = sizeof(numbers) / sizeof(numbers[0]);\n    cout << \"Max value: \" << findMax(numbers, size) << endl; // Output: 9\n    return 0;\n}",
  "java": "public class FindMax {\n    public static int findMax(int[] arr) {\n        int max = arr[0]; // Assume the first element is the maximum\n        for (int i = 1; i < arr.length; i++) {\n            if (arr[i] > max) {\n                max = arr[i]; // Update max if a larger value is found\n            }\n        }\n        return max;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {3, 1, 4, 1, 5, 9};\n        System.out.println(\"Max value: \" + findMax(numbers)); // Output: 9\n    }\n}",
  "javascript": "function findMax(arr) {\n  let max = arr[0]; // Assume the first element is the maximum\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > max) {\n      max = arr[i]; // Update max if a larger value is found\n    }\n  }\n  return max;\n}\n\nconst numbers = [3, 1, 4, 1, 5, 9];\nconsole.log(findMax(numbers)); // Output: 9",
  "python": "def find_max(arr):\n    max_value = arr[0]  # Assume the first element is the maximum\n    for num in arr[1:]:\n        if num > max_value:\n            max_value = num  # Update max if a larger value is found\n    return max_value\n\n# Example usage\nnumbers = [3, 1, 4, 1, 5, 9]\nprint(\"Max value:\", find_max(numbers))  # Output: 9"
}
